@using Microsoft.AspNetCore.Components;
@using Online_Shop.Controllers
@using OnlineShop.Models
@using OnlineShopModels.Models
@using OnlineShopModels.Models.Enums
@using OnlineShopModels.Models.ItemTypes
@inject IJSRuntime JSRuntime
@inject CartController cartController


<!--link href="<applicationName>.styles.css" rel="stylesheet" /-->


@code{
    /*
    ItemElectronics itemElectronics = new ItemElectronics { Id = Guid.NewGuid(), 
        Description = "This is a test item, used to test how it items will be displayed in cart",
        Price = 344, Name = "Cart test Item", Photos = new List<Photo>()
        {
            new Photo("Cart test", "/Item_Images/Blue.png") {Id = Guid.NewGuid(), IsMain = true}
        }
    };
    //List<ItemElectronics> itemsInCart = new List<ItemElectronics> { itemElectronics };
    
    CartItem cartItem = new CartItem() {Item = itemElectronics, Quantity = 0 };
    Cart cart = new Cart() { Id = Guid.NewGuid(), Items = new List<CartItem>(){cartItem}};
    */

    //Cart cart = cartController.GetTestCart();

    private Cart _cart;

    private Cart cart
    {
        get => _cart == null ? GetCart() : _cart;
        set => _cart = value;
    }

    private Cart GetCart()
    {
        return cartController.GetTestCart();
    }

}


<div id="cartMenu" class="cartMenu">
    <button id="closeCartButton" class="closeCartButton">
        <img src="/Icons/closeCartIcon.png" alt="close"/>
    </button>

    <div class="cartItems">

        @if (cart.Items.Any())
        {
            @foreach (var cartItem in cart.Items) //cart.Items.Select((value, index) => new {Item = value, Index = index})
            {
                <div class="cartItem">
                    <img class="cartItemImage" src=@cartItem.Item.Photos.Where(p => p.IsMain).FirstOrDefault().Link alt="item"/>

                    <h3 class="cartItemName">@cartItem.Item.Name</h3>

                    <button class="quantityLess" onclick="@(() => LessQuantity(cartItem.Id))">
                        <img src="/Icons/arrowLess.png" alt="less"/>
                    </button>

                    <label class="cartItemQuantity">@cartItem.Quantity</label>

                    <button class="quantityMore">
                        <img src="/Icons/arrowMore.png" onclick="@(() => { MoreQuantity(cartItem.Id); })" alt="more"/>
                    </button>

                    <button class="cartRemoveItem">
                        <img src="/Icons/removeItem.png" onclick="@(() => { RemoveItem(cartItem.Id); })" alt="remove"/>
                    </button>
                </div>
            }
        }

        <button class="cartConfirmOrder btn btn-success">Confirm Order</button>
    </div>

</div>

<div id="overlay" class="overlay"></div>


@code {

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            JSRuntime.InvokeVoidAsync("attachCartEventHandlers");
    //Console.WriteLine("---------------------------- attached");
        }
    }

    private int _cartItemQuantity = 1;

    private void LessQuantity()
    {
        _cartItemQuantity--;
    }

    private void MoreQuantity(Guid cartItemId)
    {
        cart = cartController.MoreQuantity(cart, cartItemId);
        StateHasChanged();

        //Console.WriteLine("More quantity ++++++++++++++++++++++++");
    }

    private void LessQuantity(Guid cartItemId)
    {
        cart = cartController.LessQuantity(cart, cartItemId);
        StateHasChanged();
    }

    private void RemoveItem(Guid cartItemId)
    {
        cart = cartController.RemoveItem(cart, cartItemId, null);
        StateHasChanged();
    }

}